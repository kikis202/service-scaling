apiVersion: apps/v1
kind: Deployment
metadata:
  name: cpu-service
  labels:
    app: cpu-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cpu-service
  template:
    metadata:
      labels:
        app: cpu-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: cpu-service
        image: cpu-service:v1
        ports:
        - containerPort: 3000
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 256Mi
        env:
        - name: JAEGER_SERVICE_NAME
          value: "cpu-service"
        - name: JAEGER_SAMPLER_TYPE
          value: "const"
        - name: JAEGER_SAMPLER_PARAM
          value: "1"
        - name: JAEGER_REPORTER_LOG_SPANS
          value: "true"
        - name: JAEGER_COLLECTOR_ENDPOINT
          value: "http://192.168.100.103:14268/api/traces"
        - name: JAEGER_AGENT_HOST
          value: "192.168.100.103"
        - name: JAEGER_AGENT_PORT
          value: "6831"
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: cpu-service
  labels:
    app: cpu-service
spec:
  type: LoadBalancer
  ports:
  - port: 3000
    targetPort: 3000
    name: http
  selector:
    app: cpu-service
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: cpu-service
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: cpu-service
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50
